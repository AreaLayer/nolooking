[general]
env_prefix = "NOLOOKING"
conf_file_param = "conf"
conf_dir_param = "conf_dir"
doc = """
Lightning Optimizing Opening Server 

This server optimizes your channel opening from a remote wallet which supports PayJoin. It enables you to open one or more channels in a single transaction from remote LND with empty wallet using sats in PayJoin-compliant wallet. This way you save one chain transaction when opening from e.g. Wasabi, Blue Wallet, BTCPayServer, or other PayJoin-supporting wallet. It's basically a user-friendly way to do PSBT funding flow.
"""

[[param]]
name = "bind_ip"
type = "std::net::Ipv4Addr"
doc = "The interface from which this server should listen (usually 127.0.0.1 or 0.0.0.0 in the case of docker)"
default = "std::net::Ipv4Addr::new(127, 0, 0, 1)"

[[param]]
name = "bind_port"
type = "u16"
doc = "nolooking HTTP port to listen on"
optional = false

[[param]]
name = "endpoint"
type = "String"
doc = "Endpoint to negotiate Pay-to-Endpoint p2ep. Used in bip21 URI as described in bip78: pj=<endpoint>"
optional = false

[[param]]
name = "lnd_address"
type = "String"
doc = "LND address in the form of https://hostname:port - hostname may be localhost"
optional = false

[[param]]
name = "lnd_cert_path"
type = "std::path::PathBuf"
doc = "Path to LND TLS certificate"
optional = false

[[param]]
name = "lnd_macaroon_path"
type = "std::path::PathBuf"
doc = "Path to LND macaroon with open channel permission"
optional = false

[[param]]
name = "danger_accept_invalid_certs"
type = "bool"
doc = "If true, accept invalid TLS certificates. **Warning**: think very carefully before using this method. If invalid certificates are trusted, PayJoin is subject to man in the middle attacks and your bitcoins can be stolen. This introduces significant vulnerabilities, and should only be used for testing purposes."
default = "false"